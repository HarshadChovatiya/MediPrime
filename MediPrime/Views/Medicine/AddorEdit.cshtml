@using MediPrime.Models

@model MediPrime.Models.Medicine


@{
    ViewBag.Title = "AddorEdit";
}

@using (Html.BeginForm("AddorEdit", "Medicine", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()


    @Html.HiddenFor(model => model.medicine_id);
    <div class="form-horizontal">
        <h4>Medicine</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.medicine_name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.medicine_name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.medicine_name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.medicine_catagory, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.medicine_catagory,new SelectList(Enum.GetValues(typeof(medicinecatagory))), "Select Catagory", new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.medicine_catagory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.medicine_doserate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.medicine_doserate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.medicine_doserate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.medicine_form, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.medicine_form, new SelectList(Enum.GetValues(typeof(medicineform))), "Select Form", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.medicine_form, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.medicine_class, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.medicine_class, new SelectList(Enum.GetValues(typeof(medicineclass))), "Select Class", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.medicine_class, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="reset" value="Reset" class="btn btn-warning" />

            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
